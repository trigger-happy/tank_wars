-a game is contained in a single instance of a game class
-there should be a pure CPU and pure GPU based versions of everything of the
	game
-for the purpose of the thesis, there should be a higher level containment for
	multiple instances of the game
	-vector/array of game instances
	-GPU: each game instance is run on a single threadblock
-keep things as transparent as possible so that there's no apparent clue when
	dealing with the cpu implementation and gpu implementation
-use broadphase for collision testing.
	-for game logic, keep track of team membership of tanks and bullets

-develop a sort of client-server model
-server deals with the simulation
-client simply serves as a sort of player based on the output of the server
-controlling the tanks are dealt with using an array of input states
-for the time being, attempt to dump the game state in each frame for debugging
-for future works, change it into one that relies on determinism
-one game instance per block for the evasion test bed

-for non-thesis purposes, add some code that checks if Nvidia CUDA is available